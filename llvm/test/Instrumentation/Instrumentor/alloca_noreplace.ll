; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt < %s -passes=instrumentor -instrumentor-read-config-file=%S/alloca_noreplace_config.json -S | FileCheck %s

target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

define ptr @foo() {
; CHECK-LABEL: define ptr @foo() {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    call void @__instrumentor_pre_alloca(i64 8, i64 8)
; CHECK-NEXT:    [[A:%.*]] = alloca ptr, align 8
; CHECK-NEXT:    call void @__instrumentor_post_alloca(ptr [[A]], i64 8, i64 8)
; CHECK-NEXT:    ret ptr [[A]]
;
entry:
  %a = alloca ptr
  ret ptr %a
}
define ptr @bar(i1 %c) {
; CHECK-LABEL: define ptr @bar(
; CHECK-SAME: i1 [[C:%.*]]) {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    call void @__instrumentor_pre_alloca(i64 4, i64 4)
; CHECK-NEXT:    [[TMP8:%.*]] = alloca i32, align 4
; CHECK-NEXT:    call void @__instrumentor_post_alloca(ptr [[TMP8]], i64 4, i64 4)
; CHECK-NEXT:    call void @__instrumentor_pre_alloca(i64 20, i64 4)
; CHECK-NEXT:    [[TMP11:%.*]] = alloca i32, i32 5, align 4
; CHECK-NEXT:    call void @__instrumentor_post_alloca(ptr [[TMP11]], i64 20, i64 4)
; CHECK-NEXT:    [[S:%.*]] = select i1 [[C]], ptr [[TMP8]], ptr [[TMP11]]
; CHECK-NEXT:    ret ptr [[S]]
;
entry:
  %a = alloca i32
  %b = alloca i32, i32 5
  %s = select i1 %c, ptr %a, ptr %b
  ret ptr %s
}
define ptr @baz(i32 %v) {
; CHECK-LABEL: define ptr @baz(
; CHECK-SAME: i32 [[V:%.*]]) {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[TMP0:%.*]] = zext i32 [[V]] to i64
; CHECK-NEXT:    [[TMP1:%.*]] = mul i64 8, [[TMP0]]
; CHECK-NEXT:    call void @__instrumentor_pre_alloca(i64 [[TMP1]], i64 8)
; CHECK-NEXT:    [[A:%.*]] = alloca ptr, i32 [[V]], align 8
; CHECK-NEXT:    call void @__instrumentor_post_alloca(ptr [[A]], i64 [[TMP1]], i64 8)
; CHECK-NEXT:    ret ptr [[A]]
;
entry:
  %a = alloca ptr, i32 %v
  ret ptr %a
}
define ptr @fizz() {
; CHECK-LABEL: define ptr @fizz() {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[TMP0:%.*]] = getelementptr <vscale x 2 x i32>, ptr null, i32 1
; CHECK-NEXT:    [[TMP1:%.*]] = ptrtoint ptr [[TMP0]] to i64
; CHECK-NEXT:    call void @__instrumentor_pre_alloca(i64 [[TMP1]], i64 8)
; CHECK-NEXT:    [[A:%.*]] = alloca <vscale x 2 x i32>, align 8
; CHECK-NEXT:    call void @__instrumentor_post_alloca(ptr [[A]], i64 [[TMP1]], i64 8)
; CHECK-NEXT:    ret ptr [[A]]
;
entry:
  %a = alloca <vscale x 2 x i32>
  ret ptr %a
}
