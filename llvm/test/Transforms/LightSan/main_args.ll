; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --scrub-attributes --version 5
; RUN: opt < %s -passes=lightsan -S | FileCheck %s
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"

define dso_local i32 @main(i32 noundef %0, ptr noundef %1) {
; CHECK-LABEL: define dso_local i32 @main(
; CHECK-SAME: i32 noundef [[TMP0:%.*]], ptr noundef [[TMP1:%.*]]) {
; CHECK-NEXT:    [[TMP3:%.*]] = alloca <{ i32, i32, [4 x i8], i32, i32, i32, ptr }>, align 8
; CHECK-NEXT:    call void @llvm.memcpy.p0.p0.i64(ptr align 8 [[TMP3]], ptr @__lightsan_value_pack, i64 32, i1 false)
; CHECK-NEXT:    [[TMP5:%.*]] = getelementptr inbounds nuw <{ i32, i32, [4 x i8], i32, i32, i32, ptr }>, ptr [[TMP3]], i32 0, i32 3
; CHECK-NEXT:    store i32 [[TMP0]], ptr [[TMP5]], align 4
; CHECK-NEXT:    [[TMP6:%.*]] = getelementptr inbounds nuw <{ i32, i32, [4 x i8], i32, i32, i32, ptr }>, ptr [[TMP3]], i32 0, i32 6
; CHECK-NEXT:    store ptr [[TMP1]], ptr [[TMP6]], align 8
; CHECK-NEXT:    call void @__lightsan_pre_function(ptr @__lightsan_.str, i32 2, ptr [[TMP3]])
; CHECK-NEXT:    [[TMP7:%.*]] = getelementptr inbounds i8, ptr [[TMP3]], i32 8
; CHECK-NEXT:    [[TMP8:%.*]] = load i32, ptr [[TMP7]], align 4
; CHECK-NEXT:    [[TMP9:%.*]] = getelementptr inbounds i8, ptr [[TMP3]], i32 24
; CHECK-NEXT:    [[TMP10:%.*]] = load ptr, ptr [[TMP9]], align 8
; CHECK-NEXT:    ret i32 0
;
  ret i32 0
}

define dso_local i32 @notmain(i32 noundef %0, ptr noundef %1) {
; CHECK-LABEL: define dso_local i32 @notmain(
; CHECK-SAME: i32 noundef [[TMP0:%.*]], ptr noundef [[TMP1:%.*]]) {
; CHECK-NEXT:    ret i32 0
;
  ret i32 0
}
